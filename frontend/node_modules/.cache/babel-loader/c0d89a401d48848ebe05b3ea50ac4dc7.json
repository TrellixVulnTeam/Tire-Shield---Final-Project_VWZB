{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherPage() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(\"\"); // const userId = useContext(FirebaseContext).auth.currentUser.uid \n  // useEffect(() => {\n  //     navigator.geolocation.getCurrentPosition((position) => {\n  //         let coordinates = position.coords;\n  //         setCurrentLocation(coordinates);\n  //         console.log(coordinates)\n  //     }, (err) => {\n  //         console.warn(`Error(${err.code}): ${err.message}`);\n  //     }, {\n  //         enableHighAccuracy: true,\n  //         timeout: 5000,\n  //         maximumAge: 0\n  //     });\n  // }, []);\n\n  async function getWeather() {\n    // navigator.geolocation.getCurrentPosition(\n    //         function(location) { console.log(location) }\n    //     )\n    // const configs = {\n    //     method: 'get',\n    //     data: JSON.stringify({}),\n    //     headers: {\"Content-Type\": \"application/json\"}\n    // function getPosition(location) {\n    //     return location\n    // }\n    // const location = await navigator.geolocation.getCurrentPosition(getPosition, getError)\n    // console.log(location)\n    const location = await fetch(navigator.geolocation.getCurrentPosition(function (location) {\n      console.log(location);\n    }));\n\n    async function getPosition(location) {\n      return location;\n    }\n\n    function getError(error) {\n      return console.log(error);\n    }\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`);\n    const userWeather = await response.json();\n    console.log(userWeather);\n    setWeather(userWeather); // if (response.status === 200) {\n    //     return { success: true, data: response.json() };\n    // }\n    // return {success: false, error: response.statusText };\n  }\n\n  useEffect(() => getWeather(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n}\n\n_s(WeatherPage, \"07v4cvH65qqgx48pmkOg8V0xj8c=\");\n\n_c = WeatherPage;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js"],"names":["React","useContext","useState","useEffect","Login","FirebaseContext","AuthUserContext","withAuthorization","WeatherPage","weather","setWeather","currentLocation","setCurrentLocation","getWeather","location","fetch","navigator","geolocation","getCurrentPosition","console","log","getPosition","getError","error","response","userWeather","json","condition","authUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAK,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAArD,CAFmB,CAKnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,iBAAeW,UAAf,GAA4B;AAE5B;AACA;AACA;AACI;AACA;AACA;AACA;AAGJ;AACA;AACA;AACA;AACA;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAEC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAC1B,UAASJ,QAAT,EAAmB;AAAEK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAAuB,KADlB,CAAF,CAA5B;;AAIA,mBAAeO,WAAf,CAA2BP,QAA3B,EAAqC;AACjC,aAAOA,QAAP;AACH;;AAED,aAASQ,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,aAAOJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAAP;AACH;;AAGG,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAE,oIAAF,CAA5B;AACA,UAAMU,WAAW,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA1B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACAf,IAAAA,UAAU,CAACe,WAAD,CAAV,CAjCwB,CAmCxB;AACA;AACA;AAEA;AAEH;;AAGDtB,EAAAA,SAAS,CAAE,MAAMU,UAAU,EAAlB,EAAsB,EAAtB,CAAT;AAEI,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP;;GA7EQL,W;;KAAAA,W;;AA+ET,MAAMmB,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAerB,iBAAiB,CAACoB,SAAD,CAAjB,CAA6BnB,WAA7B,CAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nfunction WeatherPage() {\n    const[weather, setWeather] = useState([]);\n    const[currentLocation, setCurrentLocation] = useState(\"\");\n\n\n    // const userId = useContext(FirebaseContext).auth.currentUser.uid \n\n    // useEffect(() => {\n    //     navigator.geolocation.getCurrentPosition((position) => {\n    //         let coordinates = position.coords;\n    //         setCurrentLocation(coordinates);\n    //         console.log(coordinates)\n    //     }, (err) => {\n    //         console.warn(`Error(${err.code}): ${err.message}`);\n    //     }, {\n    //         enableHighAccuracy: true,\n    //         timeout: 5000,\n    //         maximumAge: 0\n    //     });\n    // }, []);\n\n\n\n    async function getWeather() {\n\n    // navigator.geolocation.getCurrentPosition(\n    //         function(location) { console.log(location) }\n    //     )\n        // const configs = {\n        //     method: 'get',\n        //     data: JSON.stringify({}),\n        //     headers: {\"Content-Type\": \"application/json\"}\n    \n    \n    // function getPosition(location) {\n    //     return location\n    // }\n    // const location = await navigator.geolocation.getCurrentPosition(getPosition, getError)\n    // console.log(location)\n\n    const location = await fetch (navigator.geolocation.getCurrentPosition(\n        function(location) { console.log(location) }\n    ))\n\n    async function getPosition(location) {\n        return location\n    }\n\n    function getError(error) {\n        return console.log(error)\n    }\n\n\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`);\n        const userWeather = await response.json();\n        console.log(userWeather)\n        setWeather(userWeather);\n\n        // if (response.status === 200) {\n        //     return { success: true, data: response.json() };\n        // }\n\n        // return {success: false, error: response.statusText };\n\n    }\n\n\n    useEffect (() => getWeather(), []);\n\n        return (\n            <div>\n                <h2>Current Weather</h2>\n                {/* <button onClick={() => console.log(currentLocation)}>Show coordinates</button> */}\n                \n            </div>\n\n        );\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);"]},"metadata":{},"sourceType":"module"}