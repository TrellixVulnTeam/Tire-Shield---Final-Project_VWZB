{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherPage() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [userLocation, setUserLocation] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(\"\");\n  const userId = useContext(FirebaseContext).auth.currentUser.uid;\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      let coordinates = position.coords;\n      setCurrentLocation(coordinates);\n      console.log(coordinates);\n    }, err => {\n      console.warn(`Error(${err.code}): ${err.message}`);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    });\n  }, []);\n  useEffect(() => {\n    async function getOneCallData(APIKey, position) {\n      let lat = position.latitude;\n      let lon = position.longitude;\n      const oneCallAPI = `https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`;\n      let response = await fetch(oneCallAPI);\n      let data = await response.json();\n      console.log(data);\n    }\n\n    ;\n\n    async function getReverseGeocodingData(APIkey, position) {\n      let lat = position.latitude;\n      let lon = position.longitude;\n      const reverseGeocodingAPI = `https://maps.googleapis.com/maps/api/geocode/json?latlng=40.71,-74.00&key=AIzaSyC98mWMfSiEOhKrhwhN04WW2dKb_2lT_QY`;\n      let response = await fetch(reverseGeocodingAPI);\n      let data = await response.json();\n      console.log(data);\n    }\n\n    ;\n\n    if (typeof currentLocation.latitude != \"undefined\") {\n      getOneCallData(keys.oneCall, currentLocation);\n      getReverseGeocodingData(keys.reverseGeocoding, currentLocation);\n    }\n\n    ;\n  }, [currentLocation]); // async function getWeather() {\n  // navigator.geolocation.getCurrentPosition(\n  //         function(location) { console.log(location) }\n  //     )\n  // const configs = {\n  //     method: 'get',\n  //     data: JSON.stringify({}),\n  //     headers: {\"Content-Type\": \"application/json\"}\n  // function getPosition(location) {\n  //     return location\n  // }\n  // const location = await navigator.geolocation.getCurrentPosition(getPosition, getError)\n  // console.log(location)\n  // const location = await fetch (navigator.geolocation.getCurrentPosition(\n  //     function(location) { console.log(location) }\n  // ))\n  // async function getPosition(location) {\n  //     return location\n  // }\n  // function getError(error) {\n  //     return console.log(error)\n  // }\n  //     const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`);\n  //     const userWeather = await response.json();\n  //     console.log(userWeather)\n  //     setWeather(userWeather);\n  // if (response.status === 200) {\n  //     return { success: true, data: response.json() };\n  // }\n  // return {success: false, error: response.statusText };\n  //     const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=40.71,-74.00&key=AIzaSyC98mWMfSiEOhKrhwhN04WW2dKb_2lT_QY`);\n  //     const userLocation = await response.json();\n  //     console.log(userLocation)\n  //     setUserLocation(userLocation);\n  // }\n  // useEffect (() => getWeather(), []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 13\n  }, this);\n}\n\n_s(WeatherPage, \"mm6qiqUp462mv307HcBxLoG20o4=\");\n\n_c = WeatherPage;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js"],"names":["React","useContext","useState","useEffect","Login","FirebaseContext","AuthUserContext","withAuthorization","WeatherPage","weather","setWeather","userLocation","setUserLocation","currentLocation","setCurrentLocation","userId","auth","currentUser","uid","navigator","geolocation","getCurrentPosition","position","coordinates","coords","console","log","err","warn","code","message","enableHighAccuracy","timeout","maximumAge","getOneCallData","APIKey","lat","latitude","lon","longitude","oneCallAPI","response","fetch","data","json","getReverseGeocodingData","APIkey","reverseGeocodingAPI","keys","oneCall","reverseGeocoding","condition","authUser"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nfunction WeatherPage() {\n    const[weather, setWeather] = useState([]);\n    const[userLocation, setUserLocation] = useState([]);\n    const[currentLocation, setCurrentLocation] = useState(\"\");\n\n\n    const userId = useContext(FirebaseContext).auth.currentUser.uid \n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            let coordinates = position.coords;\n            setCurrentLocation(coordinates);\n            console.log(coordinates)\n        }, (err) => {\n            console.warn(`Error(${err.code}): ${err.message}`);\n        }, {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n        });\n    }, []);\n\n    useEffect(() => {\n        async function getOneCallData(APIKey, position) {\n            let lat = position.latitude;\n            let lon = position.longitude;\n            const oneCallAPI = `https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`;\n\n            let response = await fetch(oneCallAPI);\n            let data = await response.json();\n            console.log(data);\n        };\n        \n        async function getReverseGeocodingData(APIkey, position) {\n            let lat = position.latitude;\n            let lon =  position.longitude;\n            const reverseGeocodingAPI = `https://maps.googleapis.com/maps/api/geocode/json?latlng=40.71,-74.00&key=AIzaSyC98mWMfSiEOhKrhwhN04WW2dKb_2lT_QY`;\n\n            let response = await fetch(reverseGeocodingAPI);\n            let data = await response.json();\n            console.log(data);\n        };\n\n        if(typeof currentLocation.latitude != \"undefined\") {\n            getOneCallData(keys.oneCall, currentLocation);\n            getReverseGeocodingData(keys.reverseGeocoding, currentLocation);\n        };\n\n\n    }, [currentLocation]);\n\n\n    // async function getWeather() {\n\n    // navigator.geolocation.getCurrentPosition(\n    //         function(location) { console.log(location) }\n    //     )\n        // const configs = {\n        //     method: 'get',\n        //     data: JSON.stringify({}),\n        //     headers: {\"Content-Type\": \"application/json\"}\n    \n    \n    // function getPosition(location) {\n    //     return location\n    // }\n    // const location = await navigator.geolocation.getCurrentPosition(getPosition, getError)\n    // console.log(location)\n\n    // const location = await fetch (navigator.geolocation.getCurrentPosition(\n    //     function(location) { console.log(location) }\n    // ))\n\n    // async function getPosition(location) {\n    //     return location\n    // }\n\n    // function getError(error) {\n    //     return console.log(error)\n    // }\n\n\n    //     const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`);\n    //     const userWeather = await response.json();\n    //     console.log(userWeather)\n    //     setWeather(userWeather);\n\n        // if (response.status === 200) {\n        //     return { success: true, data: response.json() };\n        // }\n\n        // return {success: false, error: response.statusText };\n\n    //     const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=40.71,-74.00&key=AIzaSyC98mWMfSiEOhKrhwhN04WW2dKb_2lT_QY`);\n    //     const userLocation = await response.json();\n    //     console.log(userLocation)\n    //     setUserLocation(userLocation);\n    // }\n\n\n    // useEffect (() => getWeather(), []);\n\n        return (\n            <div>\n                <h2>Current Weather</h2>\n                {/* <button onClick={() => console.log(currentLocation)}>Show coordinates</button> */}\n                \n            </div>\n\n        );\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);"]},"metadata":{},"sourceType":"module"}