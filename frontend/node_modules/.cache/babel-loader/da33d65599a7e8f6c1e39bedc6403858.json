{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherPage() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const userId = useContext(FirebaseContext).auth.currentUser.uid;\n\n  async function getWeather() {\n    // const configs = {\n    //     method: 'get',\n    //     data: JSON.stringify({}),\n    //     headers: {\"Content-Type\": \"application/json\"}\n    const response = fetch(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&lang={lang}&appid={6693af864d042d45210a62d91db9b718}`);\n    const userWeather = response.json(); // console.log(userWeather)\n\n    setWeather(userWeather);\n\n    if (response.status === 200) {\n      return {\n        success: true,\n        data: response.json()\n      };\n    }\n\n    return {\n      success: false,\n      error: response.statusText\n    };\n  }\n\n  useEffect(() => getWeather(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n}\n\n_s(WeatherPage, \"8+xuKiZ0sFggtuSuSMFDAmKtCv8=\");\n\n_c = WeatherPage;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js"],"names":["React","useContext","useState","useEffect","Login","FirebaseContext","AuthUserContext","withAuthorization","WeatherPage","weather","setWeather","userId","auth","currentUser","uid","getWeather","response","fetch","userWeather","json","status","success","data","error","statusText","condition","authUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAArC;AAEA,QAAMS,MAAM,GAAGV,UAAU,CAACI,eAAD,CAAV,CAA4BO,IAA5B,CAAiCC,WAAjC,CAA6CC,GAA5D;;AAEA,iBAAeC,UAAf,GAA4B;AACxB;AACA;AACA;AACA;AAGA,UAAMC,QAAQ,GAAGC,KAAK,CAAE,gJAAF,CAAtB;AACA,UAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAT,EAApB,CARwB,CASxB;;AACAT,IAAAA,UAAU,CAACQ,WAAD,CAAV;;AACA,QAAIF,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,IAAI,EAAEN,QAAQ,CAACG,IAAT;AAAvB,OAAP;AACH;;AAED,WAAO;AAACE,MAAAA,OAAO,EAAE,KAAV;AAAiBE,MAAAA,KAAK,EAAEP,QAAQ,CAACQ;AAAjC,KAAP;AAEH;;AAGDrB,EAAAA,SAAS,CAAE,MAAMY,UAAU,EAAlB,EAAsB,EAAtB,CAAT;AAEI,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASP;;GApCQP,W;;KAAAA,W;;AAsCT,MAAMiB,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAenB,iBAAiB,CAACkB,SAAD,CAAjB,CAA6BjB,WAA7B,CAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nfunction WeatherPage() {\n    const[weather, setWeather] = useState([]);\n\n    const userId = useContext(FirebaseContext).auth.currentUser.uid \n\n    async function getWeather() {\n        // const configs = {\n        //     method: 'get',\n        //     data: JSON.stringify({}),\n        //     headers: {\"Content-Type\": \"application/json\"}\n    \n\n        const response = fetch(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&lang={lang}&appid={6693af864d042d45210a62d91db9b718}`);\n        const userWeather = response.json();\n        // console.log(userWeather)\n        setWeather(userWeather);\n        if (response.status === 200) {\n            return { success: true, data: response.json() };\n        }\n\n        return {success: false, error: response.statusText };\n\n    }\n\n\n    useEffect (() => getWeather(), []);\n\n        return (\n            <div>\n                <h2>Current Weather</h2>\n            \n            \n            </div>\n\n        );\n\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);"]},"metadata":{},"sourceType":"module"}