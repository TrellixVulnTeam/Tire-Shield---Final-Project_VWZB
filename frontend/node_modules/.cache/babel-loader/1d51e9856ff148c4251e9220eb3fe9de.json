{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport FirebaseContext from '../Session/context';\nimport * as ROUTES from '../../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"SignUp\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n    children: firebase => /*#__PURE__*/_jsxDEV(SignUpForm, {\n      firebase: firebase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n\n_c = SignUpPage;\n\nasync function getNewUser(username, email, user_id) {\n  const configs = {\n    method: 'post',\n    body: JSON.stringify({\n      \"username\": username,\n      \"email\": email,\n      \"user_id\": user_id\n    }),\n    headers: {\n      \"Content_Type\": \"application/json\"\n    }\n  };\n  const response = await fetch(\"http://localhost:5000/api/users_add\", configs);\n  const userNew = await response.json();\n  console.log(userNew);\n}\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        username,\n        email,\n        passwordOne\n      } = this.state;\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(auth => {\n        console.log(auth); // return jsonify({\"username\": username, \n        //     \"email\": email, \"user_id\": user_id\n        //     })\n        // Create a user in your Firebase realtime database\n\n        return this.props.firebase.db.collection(\"users\").doc(auth.user.uid) // .user(auth.currentUser.uid)\n        // .user(authUser.user.uid)\n        .set({\n          username: username,\n          email: email,\n          last_login: 1\n        }); // return getNewUser(username, email, auth.currentUser.uid);\n      }).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        value: username,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isInvalid,\n        className: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst SignUpLink = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n    to: ROUTES.SIGN_UP,\n    children: \"Sign Up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 32\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 155,\n  columnNumber: 5\n}, this);\n\n_c2 = SignUpLink;\nconst SignUpForm = withRouter(_c3 = withFirebase(SignUpFormBase));\n_c4 = SignUpForm;\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SignUpPage\");\n$RefreshReg$(_c2, \"SignUpLink\");\n$RefreshReg$(_c3, \"SignUpForm$withRouter\");\n$RefreshReg$(_c4, \"SignUpForm\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/SignUp/index.js"],"names":["React","Component","Link","withRouter","withFirebase","FirebaseContext","ROUTES","SignUpPage","firebase","getNewUser","username","email","user_id","configs","method","body","JSON","stringify","headers","response","fetch","userNew","json","console","log","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpFormBase","constructor","props","onSubmit","event","state","doCreateUserWithEmailAndPassword","then","auth","db","collection","doc","user","uid","set","last_login","setState","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignUpLink","SIGN_UP","SignUpForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport FirebaseContext from '../Session/context';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n    <div>\n        <h1>SignUp</h1>\n        <FirebaseContext.Consumer>\n            {firebase => <SignUpForm firebase={firebase} />} \n        </FirebaseContext.Consumer>\n        <SignUpForm />\n    </div>\n    );\n    \nasync function getNewUser(username, email, user_id) {\n    const configs = {\n        method: 'post',\n        body: JSON.stringify({\n        \"username\": username,\n        \"email\": email,\n        \"user_id\": user_id\n        }),\n        headers: {\"Content_Type\": \"application/json\"}\n        \n    }\n\n\n    const response = await fetch(\"http://localhost:5000/api/users_add\", configs)\n    const userNew = await response.json();\n    console.log(userNew)\n    \n}\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state;\n\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(auth => {\n            console.log(auth)\n                \n            \n                // return jsonify({\"username\": username, \n                //     \"email\": email, \"user_id\": user_id\n\n                //     })\n                \n                // Create a user in your Firebase realtime database\n    \n                return this.props.firebase\n                    .db.collection(\"users\").doc(auth.user.uid)\n                    // .user(auth.currentUser.uid)\n                    // .user(authUser.user.uid)\n                    .set({\n                        username: username,\n                        email: email,\n                        last_login: 1\n\n                    });\n\n                // return getNewUser(username, email, auth.currentUser.uid);\n\n\n                })\n                .then(() => {\n                    this.setState({...INITIAL_STATE });\n                    this.props.history.push(ROUTES.HOME);\n                })\n                .catch(error => {\n                    this.setState({ error});\n                });\n            event.preventDefault();\n            };\n\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    \n    render() {\n        const { \n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error, \n        } = this.state;\n\n        const isInvalid =\n        passwordOne !== passwordTwo ||\n        passwordOne === '' ||\n        email === '' ||\n        username === '';\n\n\n\n\n    return (\n        <form onSubmit={this.onSubmit}>\n            <input\n                name=\"username\"\n                value={username}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Full Name\"\n            />\n            <input\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Email Address\"\n            />\n            <input\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n                />\n            <input\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                />\n            <button className=\"submit\">Sign Up</button>\n            <button disabled={isInvalid} className=\"submit\">Sign Up</button>\n    \n            {error && <p>{error.message}</p>}\n        </form>\n        );\n    }\n\n}\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n    );\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n"]},"metadata":{},"sourceType":"module"}