{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherPage() {\n  _s();\n\n  const [weather, setWeather] = useState();\n  const userId = useContext(FirebaseContext).uid;\n\n  async function gettrips() {\n    const configs = {\n      method: 'post',\n      data: JSON.stringify({\n        \"user_id\": userId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"http://localhost:5000/trip_read\");\n    const trips = await response.json();\n    setTrips(trips);\n  }\n\n  useEffect(() => gettrips(), []);\n  return /*#__PURE__*/_jsxDEV(AuthUserContext.Consumer, {\n    children: authUser => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"LOCAL WEATHER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"10 DAY FORCAST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Working Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherPage, \"cnPyVM4SMZGSJKKf4BrBpWiU49g=\");\n\n_c = WeatherPage;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js"],"names":["React","useState","AuthUserContext","withAuthorization","WeatherPage","weather","setWeather","userId","useContext","FirebaseContext","uid","gettrips","configs","method","data","JSON","stringify","headers","response","fetch","trips","json","setTrips","useEffect","authUser","condition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAArC;AAEA,QAAMM,MAAM,GAAGC,UAAU,CAACC,eAAD,CAAV,CAA4BC,GAA3C;;AAEA,iBAAeC,QAAf,GAA0B;AACtB,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,mBAAWT;AAAZ,OAAf,CAFM;AAGZU,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHG,KAAhB;AAKA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,UAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACAC,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACH;;AAEDG,EAAAA,SAAS,CAAE,MAAMZ,QAAQ,EAAhB,EAAoB,EAApB,CAAT;AAGA,sBACA,QAAC,eAAD,CAAiB,QAAjB;AAAA,cACKa,QAAQ,iBACL;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADA;AAcH;;GAjCQpB,W;;KAAAA,W;;AAkCT,MAAMqB,SAAS,GAAGD,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAerB,iBAAiB,CAACsB,SAAD,CAAjB,CAA6BrB,WAA7B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\n\nfunction WeatherPage() {\n    const[weather, setWeather] = useState();\n\n    const userId = useContext(FirebaseContext).uid\n\n    async function gettrips() {\n        const configs = {\n            method: 'post',\n            data: JSON.stringify({\"user_id\": userId}),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n        const response = await fetch(\"http://localhost:5000/trip_read\");\n        const trips = await response.json();\n        setTrips(trips);\n    }\n\n    useEffect (() => gettrips(), []);\n\n\n    return (\n    <AuthUserContext.Consumer>\n        {authUser => (\n            <div>\n                <p>LOCAL WEATHER</p>\n                <p>10 DAY FORCAST</p>\n                <button >Working Progress</button>\n            </div>\n    )}\n\n    </AuthUserContext.Consumer>\n\n    );\n\n}\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);"]},"metadata":{},"sourceType":"module"}