{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport FirebaseContext from '../Session/context';\nimport * as ROUTES from '../../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"SignUp\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n    children: firebase => /*#__PURE__*/_jsxDEV(SignUpForm, {\n      firebase: firebase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n\n_c = SignUpPage;\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        username,\n        email,\n        passwordOne\n      } = this.state;\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(auth => {\n        async function getNewUser() {\n          const configs = {\n            method: 'post',\n            body: JSON.stringify({\n              \"username\": this.state.username,\n              \"email\": this.state.email,\n              \"user_id\": auth.currentUser.uid\n            }),\n            headers: {\n              \"Content_Type\": \"application/json\"\n            }\n          };\n          const response = await fetch(\"http://localhost:5000/api/users_add\", configs);\n          const userNew = await response.json();\n          console.log(userNew);\n        }\n\n        getNewUser(); // return jsonify({\"username\": username, \n        //     \"email\": email, \"user_id\": user_id\n        //     })\n        // Create a user in your Firebase realtime database\n\n        return this.props.firebase.user(auth.currentUser.uid) // .user(authUser.user.uid)\n        .set({\n          username,\n          email\n        });\n      }).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        value: username,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst SignUpLink = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n    to: ROUTES.SIGN_UP,\n    children: \"Sign Up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 32\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 145,\n  columnNumber: 5\n}, this);\n\n_c2 = SignUpLink;\nconst SignUpForm = withRouter(_c3 = withFirebase(SignUpFormBase));\n_c4 = SignUpForm;\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SignUpPage\");\n$RefreshReg$(_c2, \"SignUpLink\");\n$RefreshReg$(_c3, \"SignUpForm$withRouter\");\n$RefreshReg$(_c4, \"SignUpForm\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/SignUp/index.js"],"names":["React","Component","Link","withRouter","withFirebase","FirebaseContext","ROUTES","SignUpPage","firebase","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","SignUpFormBase","constructor","props","onSubmit","event","state","doCreateUserWithEmailAndPassword","then","auth","getNewUser","configs","method","body","JSON","stringify","currentUser","uid","headers","response","fetch","userNew","json","console","log","user","set","setState","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignUpLink","SIGN_UP","SignUpForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport FirebaseContext from '../Session/context';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n    <div>\n        <h1>SignUp</h1>\n        <FirebaseContext.Consumer>\n            {firebase => <SignUpForm firebase={firebase} />} \n        </FirebaseContext.Consumer>\n        <SignUpForm />\n    </div>\n    );\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state;\n\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(auth => {\n\n                async function getNewUser() {\n                    const configs = {\n                        method: 'post',\n                        body: JSON.stringify({\n                        \"username\": this.state.username,\n                        \"email\": this.state.email,\n                        \"user_id\": auth.currentUser.uid\n                        }),\n                        headers: {\"Content_Type\": \"application/json\"}\n                        \n                    }\n                    const response = await fetch(\"http://localhost:5000/api/users_add\", configs)\n                    const userNew = await response.json();\n                    console.log(userNew)\n                   \n                }\n                getNewUser()\n            \n                // return jsonify({\"username\": username, \n                //     \"email\": email, \"user_id\": user_id\n\n                //     })\n                \n                // Create a user in your Firebase realtime database\n    \n                return this.props.firebase\n                    .user(auth.currentUser.uid)\n                    // .user(authUser.user.uid)\n                    .set({\n                        username,\n                        email,\n                    });\n                })\n                .then(() => {\n                    this.setState({...INITIAL_STATE });\n                    this.props.history.push(ROUTES.HOME);\n                })\n                .catch(error => {\n                    this.setState({ error});\n                });\n            event.preventDefault();\n            };\n\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    \n    render() {\n        const { \n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error, \n        } = this.state;\n\n        const isInvalid =\n        passwordOne !== passwordTwo ||\n        passwordOne === '' ||\n        email === '' ||\n        username === '';\n\n\n\n\n    return (\n        <form onSubmit={this.onSubmit}>\n            <input\n                name=\"username\"\n                value={username}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Full Name\"\n            />\n            <input\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Email Address\"\n            />\n            <input\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n                />\n            <input\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                />\n            <button type=\"submit\">Sign Up</button>\n            <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n    \n            {error && <p>{error.message}</p>}\n        </form>\n        );\n    }\n\n}\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n    );\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n"]},"metadata":{},"sourceType":"module"}