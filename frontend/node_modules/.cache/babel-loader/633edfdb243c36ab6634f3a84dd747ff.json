{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/PasswordForget/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordForgetPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"PasswordForget\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(PasswordForgetForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n\n_c = PasswordForgetPage;\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email\n      } = this.state;\n      this.props.firebase.doPasswordReset(email).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      email,\n      error\n    } = this.state;\n    const isInvalid = email === '';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\",\n        children: \"Reset My Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst PasswordForgetLink = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: /*#__PURE__*/_jsxDEV(Link, {\n    to: ROUTES.PASSWORD_FORGET,\n    children: \"Forgot Password?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this);\n\n_c2 = PasswordForgetLink;\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n_c3 = PasswordForgetForm;\nexport { PasswordForgetForm, PasswordForgetLink };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PasswordForgetPage\");\n$RefreshReg$(_c2, \"PasswordForgetLink\");\n$RefreshReg$(_c3, \"PasswordForgetForm\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/PasswordForget/index.js"],"names":["React","Component","Link","withFirebase","ROUTES","PasswordForgetPage","INITIAL_STATE","email","error","PasswordForgetFormBase","constructor","props","onSubmit","event","state","firebase","doPasswordReset","then","setState","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","PasswordForgetLink","PASSWORD_FORGET","PasswordForgetForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;;AAEA,MAAMC,kBAAkB,GAAG,mBACvB;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMA,kB;AAON,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,KAAK,EAAE;AAFW,CAAtB;;AAKA,MAAMC,sBAAN,SAAqCR,SAArC,CAA+C;AAC3CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMrBC,QANqB,GAMVC,KAAK,IAAI;AAClB,YAAM;AAAEN,QAAAA;AAAF,UAAY,KAAKO,KAAvB;AAEA,WAAKH,KAAL,CAAWI,QAAX,CACGC,eADH,CACmBT,KADnB,EAEGU,IAFH,CAEQ,MAAM;AACV,aAAKC,QAAL,CAAc,EAAE,GAAGZ;AAAL,SAAd;AACD,OAJH,EAKGa,KALH,CAKSX,KAAK,IAAI;AACd,aAAKU,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACD,OAPH;AASAK,MAAAA,KAAK,CAACO,cAAN;AACD,KAnBoB;;AAAA,SAqBrBC,QArBqB,GAqBVR,KAAK,IAAI;AAClB,WAAKK,QAAL,CAAc;AAAE,SAACL,KAAK,CAACS,MAAN,CAAaC,IAAd,GAAqBV,KAAK,CAACS,MAAN,CAAaE;AAApC,OAAd;AACD,KAvBoB;;AAGnB,SAAKV,KAAL,GAAa,EAAE,GAAGR;AAAL,KAAb;AACC;;AAqBHmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKM,KAA9B;AAEA,UAAMY,SAAS,GAAGnB,KAAK,KAAK,EAA5B;AAEA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKK,QAArB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWP,KAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKc,QAHjB;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,QAAQ,EAAEK,SAAlB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAYGlB,KAAK,iBAAI;AAAA,kBAAIA,KAAK,CAACmB;AAAV;AAAA;AAAA;AAAA;AAAA,cAZZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA/C4C;;AAkD/C,MAAMC,kBAAkB,GAAG,mBACzB;AAAA,yBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAExB,MAAM,CAACyB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMD,kB;AAMN,eAAevB,kBAAf;AAEA,MAAMyB,kBAAkB,GAAG3B,YAAY,CAACM,sBAAD,CAAvC;MAAMqB,kB;AAEN,SAASA,kBAAT,EAA6BF,kBAA7B","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n    <div>\n        <h1>PasswordForget</h1>\n        <PasswordForgetForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n    constructor(props) {\n        super(props);\n \n    this.state = { ...INITIAL_STATE };\n    }\n \n  onSubmit = event => {\n    const { email } = this.state;\n \n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n \n    event.preventDefault();\n  };\n \n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n \n  render() {\n    const { email, error } = this.state;\n \n    const isInvalid = email === '';\n \n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n \n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n \nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n \nexport default PasswordForgetPage;\n \nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n \nexport { PasswordForgetForm, PasswordForgetLink };"]},"metadata":{},"sourceType":"module"}