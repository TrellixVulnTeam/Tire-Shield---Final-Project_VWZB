{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Admin/index.js\";\nimport React from 'react';\nimport withAuthorization from '../Session'; // import * as ROLES from '../../constants/roles';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Admin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Restricted area! Only users with the admin role are authorized.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n\n_c = AdminPage;\n\nconst condition = authUser => authUser; // && !!authUser.roles[ROLES.ADMIN];\n\n\nexport default withAuthorization(condition)(AdminPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Admin/index.js"],"names":["React","withAuthorization","AdminPage","condition","authUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,YAA9B,C,CAEA;;;;AAEA,MAAMC,SAAS,GAAG,mBACd;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMA,S;;AASN,MAAMC,SAAS,GAAGC,QAAQ,IACtBA,QADJ,C,CAEI;;;AAEJ,eAAeH,iBAAiB,CAACE,SAAD,CAAjB,CAA6BD,SAA7B,CAAf","sourcesContent":["import React from 'react';\nimport withAuthorization from '../Session';\n\n// import * as ROLES from '../../constants/roles';\n\nconst AdminPage = () => (\n    <div>\n        <h1>Admin</h1>\n        <p>\n        Restricted area! Only users with the admin role are authorized.\n        </p>\n    </div>\n);\n    \nconst condition = authUser =>\n    authUser \n    // && !!authUser.roles[ROLES.ADMIN];\n\nexport default withAuthorization(condition)(AdminPage);\n"]},"metadata":{},"sourceType":"module"}