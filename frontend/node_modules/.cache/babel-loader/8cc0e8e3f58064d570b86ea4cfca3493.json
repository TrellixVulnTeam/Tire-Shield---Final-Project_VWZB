{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherPage() {\n  _s();\n\n  const [weather, setAllWeather] = useState();\n  const userId = useContext(FirebaseContext).uid;\n\n  async function getAllWeather() {\n    const configs = {\n      method: 'post',\n      data: JSON.stringify({\n        \"user_id\": userId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"http://localhost:5000/api/users_weather\", configs);\n    const trips = await response.json();\n    console.log(weather);\n    setAllWeather(weather);\n  }\n\n  useEffect(() => getALLWeather(), []);\n  return /*#__PURE__*/_jsxDEV(AuthUserContext.Consumer, {\n    children: authUser => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"LOCAL WEATHER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"10 DAY FORCAST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Working Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherPage, \"EI4Ps2rF2D/smBmh5p+FNerle4E=\");\n\n_c = WeatherPage;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthUserContext","withAuthorization","WeatherPage","weather","setAllWeather","userId","uid","getAllWeather","configs","method","data","JSON","stringify","headers","response","fetch","trips","json","console","log","getALLWeather","authUser","condition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAK,CAACC,OAAD,EAAUC,aAAV,IAA2BP,QAAQ,EAAxC;AAEA,QAAMQ,MAAM,GAAGT,UAAU,CAACG,eAAD,CAAV,CAA4BO,GAA3C;;AAEA,iBAAeC,aAAf,GAA+B;AAC3B,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,mBAAWP;AAAZ,OAAf,CAFM;AAGZQ,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHG,KAAhB;AAKA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4CP,OAA5C,CAA5B;AACA,UAAMQ,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACAC,IAAAA,aAAa,CAACD,OAAD,CAAb;AACH;;AAEDL,EAAAA,SAAS,CAAE,MAAMsB,aAAa,EAArB,EAAyB,EAAzB,CAAT;AAGA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAAA,cACKC,QAAQ,iBACT;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAjCQnB,W;;KAAAA,W;;AAmCT,MAAMoB,SAAS,GAAGD,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAepB,iBAAiB,CAACqB,SAAD,CAAjB,CAA6BpB,WAA7B,CAAf","sourcesContent":["import React, { useContext, useState, useEffect} from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\n\nfunction WeatherPage() {\n    const[weather, setAllWeather] = useState();\n\n    const userId = useContext(FirebaseContext).uid\n\n    async function getAllWeather() {\n        const configs = {\n            method: 'post',\n            data: JSON.stringify({\"user_id\": userId}),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n        const response = await fetch(\"http://localhost:5000/api/users_weather\", configs);\n        const trips = await response.json();\n        console.log(weather)\n        setAllWeather(weather);\n    }\n\n    useEffect (() => getALLWeather(), []);\n\n\n    return (\n        <AuthUserContext.Consumer>\n            {authUser => (\n            <div>\n                <p>LOCAL WEATHER</p>\n                <p>10 DAY FORCAST</p>\n                <button >Working Progress</button>\n            </div>\n        )}\n\n    </AuthUserContext.Consumer>\n    );\n\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);"]},"metadata":{},"sourceType":"module"}