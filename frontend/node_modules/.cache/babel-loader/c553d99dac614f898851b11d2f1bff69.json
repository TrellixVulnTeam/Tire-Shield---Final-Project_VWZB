{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherPage() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const userId = useContext(FirebaseContext).auth.currentUser.uid;\n\n  async function getWeather() {\n    // const configs = {\n    //     method: 'get',\n    //     data: JSON.stringify({}),\n    //     headers: {\"Content-Type\": \"application/json\"}\n    function getPosition(position) {\n      return position;\n    }\n\n    const location = await navigator.geolocation.getCurrentPosition(getPosition);\n    console.log(location);\n\n    function getError(error) {\n      return console.log(error);\n    }\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`);\n    const userWeather = await response.json();\n    console.log(userWeather);\n    setWeather(userWeather); // if (response.status === 200) {\n    //     return { success: true, data: response.json() };\n    // }\n    // return {success: false, error: response.statusText };\n  }\n\n  useEffect(() => getWeather(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n\n_s(WeatherPage, \"vAvzM1XiZXFEDAUp7fDSa8e6Y/Q=\");\n\n_c = WeatherPage;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/Weather/index.js"],"names":["React","useContext","useState","useEffect","Login","FirebaseContext","AuthUserContext","withAuthorization","WeatherPage","weather","setWeather","lat","setLat","lon","setLon","time","setTime","userId","auth","currentUser","uid","getWeather","getPosition","position","location","navigator","geolocation","getCurrentPosition","console","log","getError","error","response","fetch","userWeather","json","condition","authUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAK,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAK,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAK,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAA/B;AAGA,QAAMe,MAAM,GAAGhB,UAAU,CAACI,eAAD,CAAV,CAA4Ba,IAA5B,CAAiCC,WAAjC,CAA6CC,GAA5D;;AAEA,iBAAeC,UAAf,GAA4B;AACxB;AACA;AACA;AACA;AAGJ,aAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC3B,aAAOA,QAAP;AACH;;AACD,UAAMC,QAAQ,GAAG,MAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCL,WAAzC,CAAvB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AAEA,aAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,aAAOH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAP;AACH;;AAGG,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oIAAF,CAA5B;AACA,UAAMC,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA1B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACAxB,IAAAA,UAAU,CAACwB,WAAD,CAAV,CArBwB,CAuBxB;AACA;AACA;AAEA;AAEH;;AAGD/B,EAAAA,SAAS,CAAE,MAAMkB,UAAU,EAAlB,EAAsB,EAAtB,CAAT;AAEI,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOP;;GAlDQb,W;;KAAAA,W;;AAoDT,MAAM4B,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAe9B,iBAAiB,CAAC6B,SAAD,CAAjB,CAA6B5B,WAA7B,CAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Login from '../../components/Login';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nfunction WeatherPage() {\n    const[weather, setWeather] = useState([]);\n    const[lat, setLat] = useState(\"\")\n    const[lon, setLon] = useState(\"\")\n    const[time, setTime] = useState(\"\")\n\n\n    const userId = useContext(FirebaseContext).auth.currentUser.uid \n\n    async function getWeather() {\n        // const configs = {\n        //     method: 'get',\n        //     data: JSON.stringify({}),\n        //     headers: {\"Content-Type\": \"application/json\"}\n    \n    \n    function getPosition(position) {\n        return position\n    }\n    const location = await navigator.geolocation.getCurrentPosition(getPosition)\n    console.log(location)\n\n    function getError(error) {\n        return console.log(error)\n    }\n\n    \n        const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=40.71&lon=-74.00&dt=20215101619&lang=en&appid=6693af864d042d45210a62d91db9b718`);\n        const userWeather = await response.json();\n        console.log(userWeather)\n        setWeather(userWeather);\n\n        // if (response.status === 200) {\n        //     return { success: true, data: response.json() };\n        // }\n\n        // return {success: false, error: response.statusText };\n\n    }\n\n\n    useEffect (() => getWeather(), []);\n\n        return (\n            <div>\n                <h2>Current Weather</h2>\n                \n            </div>\n\n        );\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(WeatherPage);"]},"metadata":{},"sourceType":"module"}