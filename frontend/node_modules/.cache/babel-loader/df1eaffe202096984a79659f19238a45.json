{"ast":null,"code":"var _jsxFileName = \"/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/AddTrip/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './addtrip.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddTrip() {\n  _s();\n\n  const [starting, setStarting] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [distance, setDistance] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [start_date, setStartDate] = useState(\"\");\n  const [end_date, setEndDate] = useState(\"\");\n  const [vehicle_id, setVehicleId] = useState(\"\");\n  const [success, setSuccess] = useState(true);\n  const [vehicles, setVehicles] = useState([]);\n  const userId = useContext(FirebaseContext).auth.currentUser.uid;\n\n  async function getVehicles() {\n    console.log(userId);\n    const configs = {\n      method: 'post',\n      body: JSON.stringify({\n        \"user_id\": userId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"http://localhost:5000/api/users_vehicle\", configs);\n    const userVehicles = await response.json();\n    console.log(userVehicles);\n    setVehicles(userVehicles);\n    setVehicleId(userVehicles[0][0]);\n  }\n\n  async function addTrip() {\n    const body = JSON.stringify({\n      starting: starting,\n      destination: destination,\n      distance: distance,\n      weather: weather,\n      start_date: new Date(start_date).getTime(),\n      end_date: new Date(end_date).getTime(),\n      vehicle_id: vehicle_id,\n      user_id: userId\n    });\n    const configs = {\n      method: 'post',\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"http://localhost:5000/api/trip_add\", configs);\n    const success = await response.json();\n    setSuccess(success.status);\n  }\n\n  useEffect(() => getVehicles(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Trip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Starting\",\n        onChange: e => setStarting(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Destination\",\n        onChange: e => setDestination(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Distance\",\n        onChange: e => setDistance(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Weather\",\n        onChange: e => setWeather(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Start Date\",\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"End Date\",\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: vehicles[0] && vehicles[0][0],\n        onChange: e => setVehicleId(e.target.value),\n        children: vehicles.map(v => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: v[0],\n          children: [v[1].make, \" \", v[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addTrip,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTrip, \"ZqVRb8/htRgd3Ivwb6q/Kv7cKBw=\");\n\n_c = AddTrip;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AddTrip);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTrip\");","map":{"version":3,"sources":["/Users/Deninod/Python/Final_project/TireShield/frontend/src/components_react/AddTrip/index.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthUserContext","withAuthorization","Button","Typography","AddTrip","starting","setStarting","destination","setDestination","distance","setDistance","weather","setWeather","start_date","setStartDate","end_date","setEndDate","vehicle_id","setVehicleId","success","setSuccess","vehicles","setVehicles","userId","auth","currentUser","uid","getVehicles","console","log","configs","method","body","JSON","stringify","headers","response","fetch","userVehicles","json","addTrip","Date","getTime","user_id","status","e","target","value","map","v","make","condition","authUser"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './addtrip.css';\n\n\n\n\n\nfunction AddTrip() {\n    const[starting, setStarting] = useState(\"\");\n    const[destination, setDestination] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const[weather, setWeather] = useState(\"\");\n    const[start_date, setStartDate] = useState(\"\");\n    const[end_date, setEndDate] = useState(\"\")\n    const[vehicle_id, setVehicleId] = useState(\"\");\n    const[success, setSuccess] = useState(true)\n\n\n\n    const[vehicles, setVehicles] = useState([]);\n    \n    const userId = useContext(FirebaseContext).auth.currentUser.uid\n\n    async function getVehicles() {\n        console.log(userId)\n        const configs = {\n            method: 'post',\n            body: JSON.stringify({\"user_id\": userId}),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n        const response = await fetch(\"http://localhost:5000/api/users_vehicle\", configs);\n        const userVehicles = await response.json();\n        console.log(userVehicles)\n        setVehicles(userVehicles)\n        setVehicleId(userVehicles[0][0]);\n    }\n\n\n    \n    async function addTrip() {\n        const body = JSON.stringify({\n            starting: starting, \n            destination: destination,\n            distance: distance,\n            weather: weather,\n            start_date: new Date(start_date).getTime(),\n            end_date: new Date(end_date).getTime(),\n            vehicle_id: vehicle_id,\n            user_id: userId\n            \n        })\n        const configs = {\n            method: 'post',\n            body: body,\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n        const response = await fetch(\"http://localhost:5000/api/trip_add\", configs);\n        const success = await response.json();\n        setSuccess(success.status);\n\n    }\n\n\n    useEffect (() => getVehicles(), []);\n\n    return (\n        <div className=\"container4\">\n            <div>\n                <h2>Add a New Trip</h2>\n                <input \n                type=\"text\" \n                placeholder=\"Starting\" \n                onChange={e => setStarting(e.target.value)}\n                />\n                <input \n                type=\"text\" \n                placeholder=\"Destination\" \n                onChange={e => setDestination(e.target.value)}\n                />\n                <input \n                type=\"text\" \n                placeholder=\"Distance\" \n                onChange={e => setDistance(e.target.value)}\n                />\n                <input \n                type=\"text\" \n                placeholder=\"Weather\" \n                onChange={e => setWeather(e.target.value)}\n                />\n                <input \n                type=\"date\" \n                placeholder=\"Start Date\" \n                onChange={e => setStartDate(e.target.value)}\n                />\n                <input \n                type=\"date\" \n                placeholder=\"End Date\" \n                onChange={e => setEndDate(e.target.value)}\n                />\n                <select value={vehicles[0] && vehicles[0][0]}\n                onChange={e => setVehicleId(e.target.value)}>\n                    {vehicles.map(v => <option value={v[0]}>{v[1].make} {v[0]}</option>)}\n                </select>\n    \n                <button type=\"button\" onClick={addTrip}>\n                    submit\n                </button>\n            </div>\n\n        </div>\n\n\n    );\n\n}\n\n\nconst condition = authUser => !!authUser;\n\n\nexport default withAuthorization(condition)(AddTrip);\n\n\n"]},"metadata":{},"sourceType":"module"}